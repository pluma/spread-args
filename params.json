{"name":"spread-args","tagline":"makes functions accept a single array as arguments","body":"# Synopsis\r\n\r\n**spread-args** is a JavaScript function for converting a function accepting multiple arguments into a function accepting a single array of arguments.\r\n\r\n[![browser support](https://ci.testling.com/pluma/spread-args.png)](https://ci.testling.com/pluma/spread-args)\r\n\r\n[![Build Status](https://travis-ci.org/pluma/spread-args.png?branch=master)](https://travis-ci.org/pluma/spread-args) [![NPM version](https://badge.fury.io/js/spread-args.png)](http://badge.fury.io/js/spread-args) [![Dependencies](https://david-dm.org/pluma/spread-args.png)](https://david-dm.org/pluma/spread-args)\r\n\r\n# Why?\r\n\r\nIt's trivial to implement, but in order to keep code DRY (and avoid silly mistakes) it makes sense to define this function only once per project. This library is the logical consequence of that.\r\n\r\n# Install\r\n\r\n## Node.js\r\n\r\n### With NPM\r\n\r\n```sh\r\nnpm install spread-args\r\n```\r\n\r\n### From source\r\n\r\n```sh\r\ngit clone https://github.com/pluma/spread-args.git\r\ncd spread-args\r\nnpm install\r\nmake\r\n```\r\n\r\n## Browser\r\n\r\n### With component\r\n\r\n```sh\r\ncomponent install pluma/spread-args\r\n```\r\n\r\n[Learn more about component](https://github.com/component/component).\r\n\r\n### With bower\r\n\r\n```sh\r\nbower install spread\r\n```\r\n\r\n[Learn more about bower](https://github.com/twitter/bower).\r\n\r\n### With a CommonJS module loader\r\n\r\nDownload the [latest minified CommonJS release](https://raw.github.com/pluma/spread-args/master/dist/spread-args.min.js) and add it to your project.\r\n\r\n[Learn more about CommonJS modules](http://wiki.commonjs.org/wiki/Modules/1.1).\r\n\r\n### With an AMD module loader\r\n\r\nDownload the [latest minified AMD release](https://raw.github.com/pluma/spread-args/master/dist/spread-args.amd.min.js) and add it to your project.\r\n\r\n[Learn more about AMD modules](http://requirejs.org/docs/whyamd.html).\r\n\r\n### As a standalone library\r\n\r\nDownload the [latest minified standalone release](https://raw.github.com/pluma/spread-args/master/dist/spread-args.globals.min.js) and add it to your project.\r\n\r\n```html\r\n<script src=\"/your/js/path/spread-args.globals.min.js\"></script>\r\n```\r\n\r\nThis makes the `spread-args` function available in the global namespace.\r\n\r\n# Basic usage example\r\n\r\n```javascript\r\nvar spread = require('spread-args');\r\n\r\nvar str = 'foo bar qux baz';\r\n[\r\n    [/o+/g, 'u'],\r\n    [/a/g, 'o']\r\n].forEach(spread(function(re, substitute) {\r\n    str = str.replace(re, substitute);\r\n}));\r\nconsole.log(str); // \"fu bor qux boz\"\r\n```\r\n\r\n# API\r\n\r\n## spread(fn:Function):Function\r\n\r\nWraps the given function in a function that accepts an array as first argument.\r\n\r\nIf the returned function is invoked as a method, the `this` reference will be used to invoke the function.\r\n\r\nIf the returned function is passed additional arguments, they will be passed on as usual.\r\n\r\nExample:\r\n\r\n```javascript\r\nvar spread = require('spread-args');\r\n\r\nfunction join(a, b, c) {\r\n    return [a, b].join(c || '');\r\n}\r\n\r\nvar join2 = spread(join);\r\n\r\njoin2(['foo', 'bar']); // 'foobar'\r\njoin2(['foo', 'bar', '-']); // 'foo-bar'\r\njoin2(['foo', 'bar'], '-'); // 'foo-bar'\r\n```\r\n\r\n# Unlicense\r\n\r\nThis is free and unencumbered public domain software. For more information, see http://unlicense.org/ or the accompanying [UNLICENSE](https://github.com/pluma/spread-args/blob/master/UNLICENSE) file.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}